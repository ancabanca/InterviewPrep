<?xml version="1.0"?>
<project name="Ant-Test" default="main" basedir=".">

    <!-- ###################################################
        Variable names
        ################################################### -->
    <property name="main.src.dir"   value="src" />
    <property name="test.src.dir"   value="test" />
    <property name="main.build.dir" value="build/main" />
    <property name="test.build.dir" value="build/test" />
    <property name="findbugs.dir"  value="lib/findbugs-3.0.1"/>

    <property name="lib.dir"  value="lib" />
    <property name="dist.dir" value="dist" />
    <property name="docs.dir" value="docs" />

    <!-- ###################################################
        Paths
        ################################################### -->
    <path id="build.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <path id="test.classpath">
        <pathelement location="lib/junit-4.12.jar" />
        <pathelement location="lib/hamcrest-core-1.3.jar" />
        <pathelement location="${main.build.dir}" />
        <pathelement location="${test.build.dir}" />
    </path>
    
    <path id="runtime.classpath">
        <pathelement location="${main.build.dir}" />
        <pathelement location="${lib.dir}/algs4.jar" />
    </path>

    <!-- ###################################################
        Clean and create directories
        ################################################### -->
    <target name="clean">
        <delete dir="${main.build.dir}" />
        <delete dir="${test.build.dir}" />
        <delete dir="${docs.dir}" />
        <delete dir="${dist.dir}" />
    </target>

    <target name="makedir">
        <mkdir dir="${main.build.dir}" />
        <mkdir dir="${test.build.dir}" />
        <mkdir dir="${docs.dir}" />
        <mkdir dir="${dist.dir}" />
    </target>

    <!-- ###################################################
        Compiles source code and tests
        ################################################### -->
    <target name="compile" depends="clean,makedir">
        <javac srcdir="${main.src.dir}" destdir="${main.build.dir}"
            includeantruntime="false" classpathref="build.classpath">
        </javac>

        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}"
            includeantruntime="false" classpathref="test.classpath">
        </javac>
    </target>

    <!-- ###################################################
        Runs Checkstyle   http://checkstyle.sourceforge.net/anttask.html
        ################################################### -->
    <target name="checkstyle" depends="compile">
        <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
                 classpath="lib/checkstyle-7.6-all.jar"/> 

        <checkstyle config="checkstyle-config.xml">
            <fileset dir="${main.src.dir}" includes="**/*.java"/>
            <fileset dir="${test.src.dir}" includes="**/*.java"/>
        </checkstyle>
    </target>

    <!-- ###################################################
        Runs FindBugs   http://findbugs.sourceforge.net/manual/anttask.html
        ################################################### -->
    <target name="findbugs" depends="compile">
        <taskdef name="findbugs"
                classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
                classpath="${findbugs.dir}/lib/findbugs-ant.jar"/>
        <findbugs home="${findbugs.dir}"
                    output="html"
                    outputFile="findbugs.html" >
            <auxClasspath>
                <fileset file="lib/junit-4.12.jar" />
                <fileset file="lib/algs4.jar" />
            </auxClasspath>
            <class location="${main.build.dir}" />
            <class location="${test.build.dir}" />
        </findbugs>
    </target>

    <!-- ###################################################
        Runs tests
        ################################################### -->
    <target name="test" depends="compile, checkstyle, findbugs">
        <junit printsummary="on" haltonfailure="yes">
            <classpath>
                <path refid="test.classpath" />
            </classpath>
            <formatter type="brief" usefile="false" />
            <batchtest>
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test*.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- ###################################################
        Creates Javadoc 
        ################################################### -->
    <target name="docs" depends="compile">
        <javadoc packagenames="src" sourcepath="${main.src.dir}" destdir="${docs.dir}" classpathref="build.classpath">
            <fileset dir="${main.src.dir}">
                <include name="**" />
            </fileset>
        </javadoc>
    </target>

    <!-- ###################################################
        Creates the deployable jar file
        ################################################### -->
    <target name="jar" depends="compile">
        <jar destfile="${dist.dir}\application.jar" basedir="${main.build.dir}">
            <manifest>
                <attribute name="Main-Class" value="Selection.main" />
            </manifest>
        </jar>
    </target>

    <!-- ###################################################
        Main target
        ################################################### -->
    <target name="main" depends="test"> <!-- also: jar, docs -->
        <description>Main target</description>
        <java classname="PercolationStats" classpathref="runtime.classpath">
            <arg value="10"/>
            <arg value="100"/>
        </java>
    </target>
</project>